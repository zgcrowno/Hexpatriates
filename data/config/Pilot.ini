[O-Pilot]
Graphic           = G-Pilot
HighSpeed         = true ; For high velocity objects, this property should be set to true to avoid collision errors (though it's more expensive).
AnimationSet      = AS-Pilot

;O-Pilot Class Data
WalkingSpeed         = 20000.0
FlyingSpeed          = 30000.0
JumpingSpeed         = 65000.0
DashSpeed            = 200000.0
JumpDuration         = 0.45
DashDuration         = 0.1
ParryDuration        = 0.1
MeleeDuration        = 0.5
MaxDashes            = 3
MaxLives             = 3
MaxCooldownDash      = 2.0
MaxCooldownParry     = 1.0
MaxCooldownMelee     = 1.0
IsP2                 = false

[G-Pilot]
Texture           = soldier_full.png
TextureOrigin     = (0, 0, 0)
TextureSize       = (32, 32, 0)
Pivot             = center

[B-Pilot]
Dynamic           = true
FixedRotation     = true
CustomGravity     = (0.0, 0.0, 0.0)

[BP-Pilot]
Type              = box
Solid             = true

[AS-Pilot]
Texture           = soldier_full.png
FrameSize         = (32, 32, 0)
Pivot             = center
StartAnim         = A-PilotIdle
A-PilotIdle       = 1 ; We're using the first sprite from the sheet for the idle "animation".
A-PilotRun        = 6 ; Or -1 would be fine too, since that specifies to use all the sprites in the sheet.
A-PilotIdle->     = A-PilotIdle # .A-PilotRun ; This syntax means that when the A-PilotIdle animation finishes, it may branch off to A-PilotIdle again, or A-PilotRun instantly.
A-PilotRun->      = A-PilotRun # .A-PilotIdle ; This syntax means that when the A-PilotRun animation finishes, it may branch off to A-PilotRun again, or A-PilotIdle instantly.

[A-PilotIdle]
KeyDuration       = 1.0

[A-PilotRun]
KeyDuration       = 0.1

[O-PilotP1@O-Pilot]
Body              = B-PilotP1
Position          = (-512, 350, 0)
ChildList         = O-ShipP1

[G-PilotP1@G-Pilot]

[B-PilotP1@B-Pilot]
PartList          = BP-PilotP1 # BP-Ship

[BP-PilotP1@BP-Pilot]
SelfFlags         = pilotP1
CheckMask         = wall # partition # pilotP2 # laserP2 # orbP2

[O-PilotP2@O-Pilot]
Body              = B-PilotP2
Position          = (512, 350, 0)
Flip              = x
ChildList         = O-ShipP2

[G-PilotP2@G-Pilot]

[B-PilotP2@B-Pilot]
PartList          = BP-PilotP2 # BP-Ship

[BP-PilotP2@BP-Pilot]
SelfFlags         = pilotP2
CheckMask         = wall # partition # pilotP1 # laserP1 # orbP1

[FX-Melee]
SlotList          = FXS-Melee
KeepInCache       = true
Loop              = true

[FXS-Melee]
Type              = color
Curve             = sine
StartTime         = 0
EndTime           = @O-Pilot.MeleeDuration
Absolute          = true
StartValue        = (255, 255, 0)
EndValue          = (255, 0, 0)

[FX-Parry]
SlotList          = FXS-Parry
KeepInCache       = true
Loop              = true

[FXS-Parry]
Type              = color
Curve             = sine
StartTime         = 0
EndTime           = @O-Pilot.ParryDuration
Absolute          = true
StartValue        = (255, 255, 0)
EndValue          = (0, 0, 255)