[O-Pilot]
HighSpeed         = true ; For high velocity objects, this property should be set to true to avoid collision errors (though it's more expensive).
AnimationSet      = AS-Pilot

[B-Pilot]
Dynamic           = true
FixedRotation     = true
CustomGravity     = (0.0, 0.0, 0.0)

[BP-Pilot]
Type              = box
Solid             = true

[AS-Pilot]
Texture           = soldier_full.png
FrameSize         = (32, 32, 0)
Pivot             = center
StartAnim         = A-PilotIdle
A-PilotIdle       = 1 ; We're using the first sprite from the sheet for the idle "animation".
A-PilotRun        = 6 ; Or -1 would be fine too, since that specifies to use all the sprites in the sheet.
A-PilotIdle->     = A-PilotIdle # .A-PilotRun ; This syntax means that when the A-PilotIdle animation finishes, it may branch off to A-PilotIdle again, or A-PilotRun instantly.
A-PilotRun->      = A-PilotRun # .A-PilotIdle ; This syntax means that when the A-PilotRun animation finishes, it may branch off to A-PilotRun again, or A-PilotIdle instantly.

[A-PilotIdle]
KeyDuration       = 1.0

[A-PilotRun]
KeyDuration       = 0.1

[O-PilotP1]
Body              = B-PilotP1
Position          = (-512, 350, 0)

;Class Data
UpInput           = UpP1
LeftInput         = LeftP1
DownInput         = DownP1
RightInput        = RightP1
LeftRightInput    = LeftRightP1
UpDownInput       = UpDownP1
DashInput         = DashP1
ParryInput        = ParryP1
MeleeInput        = NeutralP1
JumpInput         = DownwardP1

[BP-PilotP1@BP-Pilot]
SelfFlags         = pilotP1
CheckMask         = wall # zone # partition # melee1P2 laserP2 # orbP2

[O-PilotP2]
Body              = B-PilotP2
Position          = (512, 350, 0)
Flip              = x

;Class Data
UpInput           = UpP2
LeftInput         = LeftP2
DownInput         = DownP2
RightInput        = RightP2
LeftRightInput    = LeftRightP2
UpDownInput       = UpDownP2
DashInput         = DashP2
ParryInput        = ParryP2
MeleeInput        = NeutralP2
JumpInput         = DownwardP2

[BP-PilotP2@BP-Pilot]
SelfFlags         = pilotP2
CheckMask         = wall # zone # partition # melee1P1 # laserP1 # orbP1

;Specific Pilots

[O-Pilot1@O-Pilot]
Graphic              = G-Pilot1

;Class Data
WalkingSpeed         = 20000.0
FlyingSpeed          = 30000.0
JumpingSpeed         = 65000.0
DashSpeed            = 200000.0
JumpDuration         = 0.45
DashDuration         = 0.1
ParryDuration        = 0.8
MeleeDuration        = 0.5
MaxDashes            = 3
MaxLives             = 3
MaxCooldownDash      = 2.0
MaxCooldownParry     = 1.0
MaxCooldownMelee     = 1.0

[G-Pilot1]
Texture           = soldier_full.png
TextureOrigin     = (0, 0, 0)
TextureSize       = (32, 32, 0)
Pivot             = center

[O-Pilot1P1@O-Pilot1]
Body                 = B-Pilot1P1
Position             = @O-PilotP1
ChildList            = O-Ship1P1 # O-HeadsUpText

;Class Data
UpInput           = @O-PilotP1
LeftInput         = @O-PilotP1
DownInput         = @O-PilotP1
RightInput        = @O-PilotP1
LeftRightInput    = @O-PilotP1
UpDownInput       = @O-PilotP1
DashInput         = @O-PilotP1
ParryInput        = @O-PilotP1
MeleeInput        = @O-PilotP1
JumpInput         = @O-PilotP1

[B-Pilot1P1@B-Pilot]
PartList          = BP-PilotP1 # BP-Ship1 # BP-Melee1P1

[BP-Melee1P1@BP-Melee]
TopLeft           = (0, -16, 0)
BottomRight       = (16, 16, 0)
SelfFlags         = melee1P1
CheckMask         = pilotP2

[O-Pilot1P2@O-Pilot1]
Body                 = B-Pilot1P2
Position             = @O-PilotP2
Flip                 = @O-PilotP2
ChildList            = O-Ship1P2 # O-HeadsUpText

;Class Data
UpInput           = @O-PilotP2
LeftInput         = @O-PilotP2
DownInput         = @O-PilotP2
RightInput        = @O-PilotP2
LeftRightInput    = @O-PilotP2
UpDownInput       = @O-PilotP2
DashInput         = @O-PilotP2
ParryInput        = @O-PilotP2
MeleeInput        = @O-PilotP2
JumpInput         = @O-PilotP2

[B-Pilot1P2@B-Pilot]
PartList          = BP-PilotP2 # BP-Ship1 # BP-Melee1P2

[BP-Melee1P2@BP-Melee]
TopLeft           = (-16, -16, 0)
BottomRight       = (0, 16, 0)
SelfFlags         = melee1P2
CheckMask         = pilotP1

;Melee

[BP-Melee]
Type              = box
Solid             = false

;Zone

[O-Zone]
Body              = B-Zone

[B-Zone]
PartList          = BP-Zone
Dynamic           = false

[BP-Zone]
Type              = box
Solid             = false
TopLeft           = (0, 0, 0)
BottomRight       = (960, 945, 0)
SelfFlags         = zone
CheckMask         = pilotP1 # pilotP2

[O-ZoneP1@O-Zone]
Position          = (-960, -405, 0)

[O-ZoneP2@O-Zone]
Position          = (0, -405, 0)

;Text

[O-HeadsUpText@ScrollObject]
Graphic           = G-HeadsUpText
Position          = (0, -1, 0)
Scale             = (1.25, 1.25, 1.25)
UseParentSpace    = both

[G-HeadsUpText]
Text              = T-HeadsUpText
Pivot             = center

[T-HeadsUpText]
String            = 10

;FX

[FX-Melee]
SlotList          = FXS-Melee
KeepInCache       = true
Loop              = true

[FXS-Melee]
Type              = color
Curve             = sine
StartTime         = 0
EndTime           = @O-Pilot1.MeleeDuration
Absolute          = true
StartValue        = (255, 255, 0)
EndValue          = (255, 0, 0)

[FX-Parry]
SlotList          = FXS-Parry
KeepInCache       = true
Loop              = true

[FXS-Parry]
Type              = color
Curve             = sine
StartTime         = 0
EndTime           = @O-Pilot1.ParryDuration
Absolute          = true
StartValue        = (255, 255, 0)
EndValue          = (0, 0, 255)