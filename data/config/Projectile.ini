[O-Projectile]
LifeTime          = 5.0
HighSpeed         = true ; For high velocity objects, this property should be set to true to avoid collision errors (though it's more expensive).
UseParentSpace    = position

[G-Projectile]
Pivot             = center

[B-Projectile]
Dynamic           = true
FixedRotation     = true
CustomGravity     = (0.0, 0.0, 0.0)

[BP-Projectile]
Solid             = true

[O-Laser@O-Projectile]
; O-Laser Class Data
Speed             = 1000

[BP-Laser@BP-Projectile]
Type              = box
Solid             = false

[O-LaserP1@O-Laser]
Graphic           = G-LaserP1
Body              = B-LaserP1

[G-LaserP1@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Lasers/laserBlue03.png

[B-LaserP1@B-Projectile]
PartList          = BP-LaserP1

[BP-LaserP1@BP-Laser]
SelfFlags         = projectileP1
CheckMask         = geometry # space # pilotP2

[O-LaserP2@O-Laser]
Graphic           = G-LaserP2
Body              = B-LaserP2

[G-LaserP2@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Lasers/laserRed03.png

[B-LaserP2@B-Projectile]
PartList          = BP-LaserP2

[BP-LaserP2@BP-Laser]
SelfFlags         = projectileP2
CheckMask         = geometry # space # pilotP1

[O-LaserHeatseeking@O-Projectile]
; O-LaserHeatseeking Class Data
Speed             = 1000

[BP-LaserHeatseeking@BP-Projectile]
Type              = box

[O-LaserHeatseekingP1@O-LaserHeatseeking]
Graphic           = G-LaserHeatseekingP1
Body              = B-LaserHeatseekingP1

[G-LaserHeatseekingP1@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Lasers/laserBlue03.png

[B-LaserHeatseekingP1@B-Projectile]
PartList          = BP-LaserHeatseekingP1

[BP-LaserHeatseekingP1@BP-LaserHeatseeking]
SelfFlags         = projectileP1
CheckMask         = geometry # pilotP2

[O-LaserHeatseekingP2@O-LaserHeatseeking]
Graphic           = G-LaserHeatseekingP2
Body              = B-LaserHeatseekingP2

[G-LaserHeatseekingP2@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Lasers/laserRed03.png

[B-LaserHeatseekingP2@B-Projectile]
PartList          = BP-LaserHeatseekingP2

[BP-LaserHeatseekingP2@BP-LaserHeatseeking]
SelfFlags         = projectileP2
CheckMask         = geometry # pilotP1

[O-LaserWall@O-Projectile]
Rotation          = 90.0

;O-LaserWall Class Data
Speed             = 450

[BP-LaserWall@BP-Projectile]
Type              = box

[O-LaserWallP1@O-LaserWall]
Graphic           = G-LaserWallP1
Body              = B-LaserWallP1

[G-LaserWallP1@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Lasers/laserBlue03.png

[B-LaserWallP1@B-Projectile]
PartList          = BP-LaserWallP1

[BP-LaserWallP1@BP-LaserWall]
SelfFlags         = projectileP1
CheckMask         = geometry # pilotP2

[O-LaserWallP2@O-LaserWall]
Graphic           = G-LaserWallP2
Body              = B-LaserWallP2

[G-LaserWallP2@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Lasers/laserRed03.png

[B-LaserWallP2@B-Projectile]
PartList          = BP-LaserWallP2

[BP-LaserWallP2@BP-LaserWall]
SelfFlags         = projectileP2
CheckMask         = geometry # pilotP1

[O-Orb@O-Projectile]
Scale             = (0.5, 0.5, 0.5)

; O-Orb Class Data
Speed             = 600

[BP-Orb@BP-Projectile]
Type              = sphere
Restitution       = 1.0 ; A restitution of one to allow for "perfect" bouncing.

[O-OrbP1@O-Orb]
Graphic           = G-OrbP1
Body              = B-OrbP1

[G-OrbP1@G-Projectile]
Texture           = SpaceShooterRedux/PNG/ufoBlue.png

[B-OrbP1@B-Projectile]
PartList          = BP-OrbP1

[BP-OrbP1@BP-Orb]
SelfFlags         = projectileP1
CheckMask         = geometry # pilotP2

[O-OrbP2@O-Orb]
Graphic           = G-OrbP2
Body              = B-OrbP2

[G-OrbP2@G-Projectile]
Texture           = SpaceShooterRedux/PNG/ufoRed.png

[B-OrbP2@B-Projectile]
PartList          = BP-OrbP2

[BP-OrbP2@BP-Orb]
SelfFlags         = projectileP2
CheckMask         = geometry # pilotP1

[O-Turret@O-Projectile]
;O-Turret Class Data
Speed             = 800

[BP-Turret@BP-Projectile]
Type              = box

[O-TurretP1@O-Turret]
Graphic           = G-TurretP1
Body              = B-TurretP1

[G-TurretP1@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Parts/cockpitBlue_4.png

[B-TurretP1@B-Projectile]
PartList          = BP-TurretP1

[BP-TurretP1@BP-Turret]
SelfFlags         = projectileP1
CheckMask         = geometry # pilotP2

[O-TurretP2@O-Turret]
Graphic           = G-TurretP2
Body              = B-TurretP2

[G-TurretP2@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Parts/cockpitRed_4.png

[B-TurretP2@B-Projectile]
PartList          = BP-TurretP2

[BP-TurretP2@BP-Turret]
SelfFlags         = projectileP2
CheckMask         = geometry # pilotP1

[O-Prism@O-Projectile]
;O-Prism Class Data
Speed             = 300

[BP-Prism@BP-Projectile]
Type              = box

[O-PrismP1@O-Prism]
Graphic           = G-PrismP1
Body              = B-PrismP1

[G-PrismP1@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Meteors/meteorGrey_big4.png

[B-PrismP1@B-Projectile]
PartList          = BP-PrismP1

[BP-PrismP1@BP-Prism]
SelfFlags         = projectileP1
CheckMask         = geometry # pilotP2 # projectileP1

[O-PrismP2@O-Prism]
Graphic           = G-PrismP2
Body              = B-PrismP2

[G-PrismP2@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Meteors/meteorBrown_big4.png

[B-PrismP2@B-Projectile]
PartList          = BP-PrismP2

[BP-PrismP2@BP-Prism]
SelfFlags         = projectileP2
CheckMask         = geometry # pilotP1 # projectileP2

[O-Beam@O-Projectile]
;O-Beam Class Data
Speed             = 0

[BP-Beam@BP-Projectile]
Type              = box

[O-BeamP1@O-Beam]
Graphic           = G-BeamP1
Body              = B-BeamP1

[G-BeamP1@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Effects/fire08.png

[B-BeamP1@B-Projectile]
PartList          = BP-BeamP1

[BP-BeamP1@BP-Beam]
SelfFlags         = projectileP1
CheckMask         = geometry # pilotP2

[O-BeamP2@O-Beam]
Graphic           = G-BeamP2
Body              = B-BeamP2

[G-BeamP2@G-Projectile]
Texture           = SpaceShooterRedux/PNG/Effects/fire10.png

[B-BeamP2@B-Projectile]
PartList          = BP-BeamP2

[BP-BeamP2@BP-Beam]
SelfFlags         = projectileP2
CheckMask         = geometry # pilotP1